{"version":3,"sources":["landing-page/img/learn-english.png","serviceWorker.js","landing-page/components/header/index.js","landing-page/components/body/feedback-form/form-input.js","landing-page/components/body/feedback-form/index.js","landing-page/components/body/index.js","landing-page/components/footer/index.js","landing-page/index.js","utils/nav-bar/nav-bar-logo.js","utils/nav-bar/nav-bar-buttons.js","utils/nav-bar/index.js","web/index.js","web/about/index.js","web/login/index.js","app/components/header/index.js","app/index.js","utils/page404/index.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Header","react_default","a","createElement","id","FormInput","_ref","labelName","type","name","placeholder","value","onChange","className","FeedbackForm","state","email","observations","sended","handleChangeName","event","_this","setState","target","handleChangeEmail","handleChangeObservation","handleSubmit","_callee","regenerator_default","wrap","_context","prev","next","preventDefault","axios","post","then","res","console","log","catch","stop","onSubmit","this","form_input","React","Component","Body","showForm","_this2","src","Image","alt","feedback_form","onClick","Footer","LandingPage","header","body","footer","NavBarLogo","label","NavBarButtons","href","NavBar","nav_bar_logo","nav_bar_buttons","WebPage","nav_bar","About","Login","Application","components_header","Page404","ReactDOM","render","react_router_dom","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d333593b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/learn-english.de2c60f2.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\n\nimport './styles.css'\n\nconst Header = () => (\n    <div id='bg-header'>\n        <header id='main-header'>\n            <p id='text-header'>\n                Aulas de Inglês sem Sair de Casa?\n            </p>\n        </header>\n    </div>\n)\n\nexport default Header","import React from 'react'\n\nimport './styles.css'\n\nconst FormInput = ({ labelName, type, name, placeholder, value, onChange }) => (\n    <div className=\"row\">\n        <div className=\"col-25\">\n            <label> {labelName} </label>\n        </div>\n        <div className=\"col-75\">\n            <input \n                type={type}\n                name={name} \n                placeholder={placeholder}\n                value={value} \n                onChange={onChange}\n            />\n        </div>\n    </div>\n)\n\nexport default FormInput","/**\n * Comments: The things is must do is...\n * 2. Fix the side margins\n */\n\nimport React from 'react'\nimport axios from 'axios'\n\nimport './styles.css'\n\nimport FormInput from './form-input'\n\nclass FeedbackForm extends React.Component {\n    state = {\n        name: '',\n        email: '',\n        observations: '',\n        sended: false\n    }\n\n    handleChangeName = event => {\n        this.setState({ name: event.target.value })\n    }\n    handleChangeEmail = event => {\n        this.setState({ email: event.target.value })\n    }\n    handleChangeObservation = event => {\n        this.setState({ observations: event.target.value })\n    }\n    \n    handleSubmit = async event => {\n        event.preventDefault();\n\n        await axios.post(\n            `https://online-class-api.herokuapp.com/api/landing-page-form`, \n            // `http://localhost:3001/api/landing-page-form`, // Teste\n            {\n                name: this.state.name,\n                email: this.state.email,\n                observations: this.state.observations\n            },\n        ).then(res => {\n            console.log(\"Sucessfully submitted!\")\n            this.setState({ sended:true })\n        }).catch(() => console.log(\"Something went wrong and the post was blocked\"))\n    }\n    \n    render(){    \n        return (\n            <div className='container'>\n                <p className='title'> Inscreva-se Abaixo! </p>\n                <form className='form' onSubmit={this.handleSubmit} >\n                    <FormInput \n                        labelName='Seu Nome' \n                        type='text' \n                        name='nome' \n                        placeholder='João Arruda'\n                        value={this.state.name} \n                        onChange={this.handleChangeName}\n                    />\n                    <FormInput \n                        labelName='Seu Email' \n                        type='text' \n                        name='email' \n                        placeholder='joaoarruda@domain.com.br'\n                        value={this.state.email} \n                        onChange={this.handleChangeEmail}\n                    />\n                    <div className=\"row\">\n                        <div className=\"col-25\">\n                            <label> Observações </label>\n                        </div>\n                        <div className=\"col-75\">\n                            <textarea \n                                name='observacoes'\n                                placeholder='Nos deixe seu feedback...'\n                                value={this.state.observations}\n                                onChange={this.handleChangeObservation}\n                            />\n                        </div>\n                    </div>\n                    <br></br>\n                    { this.state.sended ? <p> Obrigado! </p> :\n                    <div className=\"row\">\n                        <input type=\"submit\" value=\"Enviar\"/>\n                    </div>}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default FeedbackForm","import React from 'react'\n\nimport FeedbackForm from './feedback-form'\n\nimport './styles.css'\nimport Image from '../../img/learn-english.png'\n\nclass Body extends React.Component {\n    state = {\n        showForm: false\n    }\n    render(){\n        return (\n            <main className='main-body'>\n                <p className='title'> Qual a nossa proposta? </p>\n                <p className='text'>\n                    Após alguns estudos, percebemos uma grande necessidade na população brasileira, tendo em\n                    vista essa necessidade, propomos uma solução que vai dar muito certo para você.\n                </p>\n                <p className='quote'> What is your biggest dream? </p>\n                <p className='text'>\n                    Foi difícil ler essa frase? Então, se você teve dificuldade não fique triste, apenas 5% da\n                    população brasileira é capaz de ler essa frase e responde-la apropriadamente, temos mais\n                    de 200 milhões de pessoas que não falam a lingua dos negócios, isso é um dado que nos assuta,\n                    na verdade estamos trabalhando para sanar essa dificuldade.\n                </p>\n                <p className='text'>\n                    Queremos lançar uma aplicação online onde você pode conversar com professores de \n                    inglês muito bem qualificados e treinados, nestas aulas o nosso foco é conversação\n                    você vai poder tirar suas dúvidas e ainda ter uma boa conversa com quem entender do\n                    assunto.\n                </p>\n                <img className='image' src={Image} alt='Learn English' />\n                <p className='comments'>\n                    Não estude sozinho, estude conosco!\n                </p>\n                <p className='text'>\n                    Se você quiser apoiar o projeto, pode fazer clicando abaixo.\n                </p>\n                { this.state.showForm ? <FeedbackForm /> : null }\n                <button className='button' onClick={() => {\n                    this.state.showForm ? this.setState({ \n                        showForm: false \n                    }) : this.setState({ \n                        showForm: true \n                    })\n                }}><span> { this.state.showForm ? \"Fechar\" : \"Apoiar\" } </span></button>\n            </main>\n        )\n    }\n}\n\nexport default Body","import React from 'react'\n\nimport './styles.css'\n\nconst Footer = () => (\n    <footer id='main-footer'>\n        Igor Souza - Professor de Inglês Particular\n    </footer>\n)\n\nexport default Footer","import React from 'react';\n\nimport './styles.css'\nimport Header from './components/header'\nimport Body from './components/body'\nimport Footer from './components/footer'\n\nconst LandingPage = () => (\n    <div className=\"LandingPage\">\n      <Header />\n      <Body />\n      <Footer />\n    </div>\n)\n\nexport default LandingPage;","import React from 'react'\n\nconst NavBarLogo = ({ label }) => (\n    <div>{ label }</div>\n)\n\nexport default NavBarLogo","import React from 'react'\n\nconst NavBarButtons = () => (\n    <ul>\n        <li><a href='/'> Inicio </a></li>\n        <li><a href='/about'> Sobre </a></li>\n        <li><a href='/login'> Entrar </a></li>\n    </ul>\n)\n\nexport default NavBarButtons","import React from 'react'\n\nimport NavBarLogo from './nav-bar-logo'\nimport NavBarButtons from './nav-bar-buttons'\n\nconst NavBar = () => (\n    <div>\n        <NavBarLogo label={'Online Class'}/>\n        <NavBarButtons />\n    </div>\n)\n\nexport default NavBar","import React from 'react'\n\nimport NavBar from '../utils/nav-bar'\n\nconst WebPage = () => (\n    <div>\n        <NavBar name={'Online Class'}/>\n        <h1>\n            Pagina Inicial para divulgação, e login...\n        </h1>\n    </div>\n)\n\nexport default WebPage","import React from 'react'\n\nconst About = () => (\n    <h1> Pagina em Desenvolvimento! </h1>\n)\n\nexport default About","import React from 'react'\n\nconst Login = () => (\n    <div>\n        Fomulário de Login\n    </div>\n)\n\nexport default Login","import React from 'react'\n\nconst Header = () => (\n    <main className='main-header'>\n        user\n    </main>\n)\n\nexport default Header","import React from 'react'\n\nimport Header from './components/header'\n\nconst Application = () => (\n    <div className=\"Application\">\n      <Header />\n      <p> This is an App! </p>\n    </div>\n)\n\nexport default Application","import React from 'react'\n\nconst Page404 = () => (\n    <div>\n        <h1>\n            Pagina Não Encontrada!\n        </h1>\n    </div>\n)\n\nexport default Page404","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom' // importando o BrowserRouter do pacote que acabamos de instalar\n\nimport LandingPage from './landing-page'\nimport WebPage from './web'\nimport About from './web/about'\nimport Login from './web/login'\nimport Application from './app'\nimport Page404 from './utils/page404'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path='/' exact={true} component={LandingPage} />\n            <Route path='/web' component={WebPage} />\n            <Route path='/about' component={About} />\n            <Route path='/login' component={Login} />\n            <Route path='/application' component={Application} />\n            <Route path='*' component={Page404} />\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}